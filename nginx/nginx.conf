server {
    listen 80;
    server_name localhost;
    resolver 127.0.0.11 ipv6=off;
    set $account_upstream account-service:8000;
    set $booking_upstream booking-service:80;
    set $review_upstream review-service:8000;
    set $tradie_upstream tradie-service:8000;
    set $notification_upstream notification-service:8000;

    # Auth sub-request endpoint
    location = /_auth_verify {
        internal;
        proxy_pass http://$account_upstream/api/accounts/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header Authorization $http_authorization;
    }

    # Expose user context from auth subrequest to proxied services
    auth_request_set $user_id $upstream_http_x_user_id;
    auth_request_set $user_role $upstream_http_x_user_role;

    # Public pages proxied to host
    location ~ ^/(search|tradie|login|register|admin/login|$) {
        proxy_pass http://host.docker.internal:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # SPA (Vite/React) on host
    location ~ ^/(dashboard|tradie-dashboard|admin)(/|$) {
        proxy_pass http://host.docker.internal:5173;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Public APIs (login/register)
    location = /api/accounts/login {
        proxy_pass http://$account_upstream/api/accounts/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location = /api/accounts/register {
        proxy_pass http://$account_upstream/api/accounts/register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Protected APIs (apply auth_request individually)
    location ^~ /api/accounts/ {
        auth_request /_auth_verify;
        proxy_pass http://$account_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }

    location ^~ /api/bookings {
        auth_request /_auth_verify;
        proxy_pass http://$booking_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }
    location ^~ /api/quotes {
        auth_request /_auth_verify;
        proxy_pass http://$booking_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }

    location ^~ /api/admin/bookings {
        auth_request /_auth_verify;
        proxy_pass http://$booking_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }

    location ^~ /api/reviews {
        auth_request /_auth_verify;
        proxy_pass http://$review_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }
    location ^~ /api/admin/reviews {
        auth_request /_auth_verify;
        proxy_pass http://$review_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }

    # Admin accounts endpoints to account-service
    location ^~ /api/admin/accounts {
        auth_request /_auth_verify;
        proxy_pass http://$account_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }

    location ^~ /api/tradies {
        auth_request /_auth_verify;
        proxy_pass http://$tradie_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }
    location ^~ /api/services {
        auth_request /_auth_verify;
        proxy_pass http://$tradie_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }
    location ^~ /api/admin/categories {
        auth_request /_auth_verify;
        proxy_pass http://$tradie_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Role $user_role;
    }

    # Notification service: no auth (worker-only API if any)
    location ^~ /api/notifications {
        proxy_pass http://$notification_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

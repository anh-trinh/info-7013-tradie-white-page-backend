# Main nginx.conf for Railway: declare env vars and include site config
# This file is intended to be copied to /etc/nginx/nginx.conf in the image

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Allow env vars for services (must be in main context, not http{})
env ACCOUNT_SERVICE_URL;
env BOOKING_SERVICE_URL;
env REVIEW_SERVICE_URL;
env TRADIE_SERVICE_URL;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # (env directives must be in main context; moved above)

    # Use public DNS resolvers on Railway
    resolver 1.1.1.1 8.8.8.8 valid=30s ipv6=off;
    resolver_timeout 5s;

    # Map env vars to upstreams
    map $ACCOUNT_SERVICE_URL $account_upstream {
        ""      "http://account-service:8000";
        default  $ACCOUNT_SERVICE_URL;
    }
    map $BOOKING_SERVICE_URL $booking_upstream {
        ""      "http://booking-service:80";
        default  $BOOKING_SERVICE_URL;
    }
    map $REVIEW_SERVICE_URL $review_upstream {
        ""      "http://review-service:8000";
        default  $REVIEW_SERVICE_URL;
    }
    map $TRADIE_SERVICE_URL $tradie_upstream {
        ""      "http://tradie-service:3000";
        default  $TRADIE_SERVICE_URL;
    }

    include /etc/nginx/conf.d/site.conf;
}
